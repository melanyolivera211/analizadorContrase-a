package interfaz;
import analyzer.PasswordAnalyzer;
import analyzer.PasswordReport;
import analyzer.PasswordStrength;
import static analyzer.PasswordStrength.MODERATE;
import static analyzer.PasswordStrength.STRONG;
import static analyzer.PasswordStrength.VERY_STRONG;
import static analyzer.PasswordStrength.VERY_WEAK;
import static analyzer.PasswordStrength.WEAK;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
/**
 *
 * @author User
 */
public class MainUI extends javax.swing.JFrame {
    private JTextField passwordField;
    private JButton analyzeButton;
    private JLabel resultLabel;
    private JLabel timeLabel;
    private JProgressBar strengthBar;
    private PasswordAnalyzer analyzer; 
    

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        setTitle("Analizador de Contrase침as");
        setSize(450, 250);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new GridBagLayout());
        getContentPane().setBackground(new Color(240, 240, 240));
analyzer = new PasswordAnalyzer();


        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5);

        // Campo de texto
        passwordField = new JTextField(20);
        gbc.gridx = 0; gbc.gridy = 0; gbc.gridwidth = 2;
        add(passwordField, gbc);

        // Bot칩n
        analyzeButton = new JButton("Analizar");
        analyzeButton.setBackground(new Color(50, 150, 250));
        analyzeButton.setForeground(Color.WHITE);
        analyzeButton.setFocusPainted(false);
        gbc.gridy = 1; gbc.gridwidth = 1;
        add(analyzeButton, gbc);

        // Barra de progreso
        strengthBar = new JProgressBar(0, 100);
        strengthBar.setStringPainted(true);
        gbc.gridy = 2; gbc.gridwidth = 2;
        add(strengthBar, gbc);

        // Etiqueta de resultado
        resultLabel = new JLabel("Ingrese una contrase침a para analizar");
        gbc.gridy = 3;
        add(resultLabel, gbc);

        // Etiqueta de tiempo estimado
        timeLabel = new JLabel("");
        gbc.gridy = 4;
        add(timeLabel, gbc);

        analyzeButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                analyzePassword();
            }
        });
    }
private void analyzePassword() {
        String password = passwordField.getText();
        if (password.isEmpty()) {
            resultLabel.setText("Por favor, ingrese una contrase침a.");
            return;
        }

        PasswordReport report = analyzer.analyze(password);
        int strength = (int) (report.getOverallScore() * 100);
        strengthBar.setValue(strength);
        strengthBar.setForeground(getColor(report.getStrength()));
        strengthBar.repaint();

        resultLabel.setText("Fuerza: " + report.getStrength().getDescription());
        timeLabel.setText("Tiempo estimado de descifrado: " + report.getBruteForceTime());
    }

private Color getColor(PasswordStrength strength) {
        switch (strength) {
            case VERY_WEAK: return new Color(255, 0, 0);
            case WEAK: return new Color(255, 165, 0);
            case MODERATE: return new Color(255, 255, 0);
            case STRONG: return new Color(144, 238, 144);
            case VERY_STRONG: return new Color(0, 100, 0);
            default: return Color.GRAY;
        }
    }




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
